1、变量
    顾名思义，变量就是其值可以改变的量，不是固定不变的。
    变量的三要素：变量的值、变量的类型、变量的名。
      变量的数据类型决定了如何将将代表这些值的位存储到计算机的内存中，
    不同的数据类型定义的一组操作也是不一样的。比如String类型的数据类型
    有截取字符串的操作，而数据类型的数据可以进行加减乘除。
    python中的变量在使用的时候必须先赋值，变量赋值后才该变量才会被创建。
    等号（=）用来给变量赋值。等号（=）运算符左边是一个变量名，等号（=）右边
    是储存在变量中的值，把右边的值赋给左边的变量，或者说左边的变量指向右边的值。
    例如： a = 103
    步骤：
        1）python先把103存入变量中
        2）获取该变量的地址值
        3）把变量值103赋值给变量a
        可以理解为变量a储存的是指向103的这个值的地址。
二、给变量赋值
    变量必须先赋值，然后才可以使用。
    1）给单个变量赋值
        整数类型    integer int
            a = 103
        浮点类型    float
            b = 1.03
        字符类型
            e = '123asa'
    2)给多个变量赋值
        把一个值赋值给多个变量
            a=b=c=d=103
        多个值赋值给多个变量：
            a,b,c=1,1.1,12
            注意：变量名和变量值都用‘,’隔开，变量名和变量值之间一一对应。
        下面的写法是错误的：
            a=1,b=1.1,c=12
            SyntaxError: can't assign to literal 
三、变量的命名规范
    在Python中，变量名必须以字母或下划线字符开头。可以包含字母、数字和下划线。大写字母和小写字母
    都是允许的。格式不好的变量名称会导致语法错误，如果我们包含一个非字母的，非下划线，非数字字符作为变量名。
    python严格区分大小写
    变量名不能是关键字，如：['and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 
    'elif', 'else', 'except', 'exec', 'finally', 'for', 'from', 'global', 'if', 'import', 'in',
     'is', 'lambda', 'not', 'or', 'pass', 'print', 'raise', 'return', 'try', 'while', 'with', 'yield'] 
    注意：
        1）不能以数字、特殊字符号开头
        2）整个命名不可以包含特殊符号  
    类似people_name的命令方式，这样比较容易阅读,比如user_name、 user_age
四、运算符
    运算符用于执行程序代码运算，会针对一个以上操作数项目来进行运算。例如：2+3，其操作数是2和3，而运算符则是“+”。
    Python运算符包括算术运算符、关系运算符、逻辑运算符、赋值运算符。 
    算数运算符：
        +、-、*、/、//（向下取整）、%（取模）、**（幂）
    关系运算符：
        ==(等于)、！=（不等于）、>、<、<=、>=
    逻辑运算符：
        运算符    表达式        说明
        and     a and b     逻辑与，当a为true时，才计算b
        or      a or b      逻辑或，当a为False时才计算b
        not     not a       逻辑非
    赋值运算符： 
        运算符      表达式                          说明 
        =         c=a + b      简单赋值运算符， 将 a + b 的运算结果赋值为 c（重点：两个变量值的交换） 
        +=        c +=a         加法赋值运算符 c += a 等效于 c = c + a 
        -=        c -=a         减法赋值运算符 c -= a 等效于 c = c - a 
        *=        c *=a         乘法赋值运算符 c *= a 等效于 c = c * a 
        /=        c /=a         除法赋值运算符 c /= a 等效于 c = c / a 
        %=        c %=a         取模赋值运算符 c %= a 等效于 c = c % a 
        //=       c //=a        取整除赋值运算符 c //= a 等效于 c = c // a 
        **=       c **=a        幂赋值运算符 c **= a 等效于 c = c ** a 
        为什么不能写成a=b，b=a？这是因为a=b,是把b的值赋给a,a就等于b的值，然后把a的值赋给b,b的值还是b的值，即a和b的值都等于b的值。 
    运算符的优先级：
        Python的算术表达式具有结合性和优先性。结合性是指表达式按照从左到右、先乘除后加减的原则进行计算。 
        Python运算符优先级(由高到低) 
        ** 指数 (最高优先级) 
        ~ + - 按位翻转, 一元加号和减号 (正负号) 
        * / % // 乘，除，取模和取整除 
        + - 加法减法 
        <= < > >= 比较运算符 
        <> == != 等于运算符 
        = %= /= //= -= += *= **= 赋值运算符 
        以上内容了解即可。 
        另外，小括号可以改变优先级，有()的情况优先计算()中的表达式。 
五、数据类型
    数据类型在数据结构中的定义是一个值的集合以及定义在这个值集上的一组操作。 
    Python中六大数据类型：
        Number(数字)、String（字符串）、List（列表）、Tuple（元祖）、Sets（集合）、Dictionary（字典）
    数字类型（Number）：
        int、float、bool、complex（复数）
        整数类型：
            在Python 3里，只有一种整数类型 int，表示为长整型，没有 python2 中的 Long。 
            这些类型是不可变的，就是说整数对象一旦创建，其值便不可更改。相反，系统将创建新的简单类型对象并将其赋值给变量。
        bool类型：
            Python 中最简单的内置类型是 bool 类型，该类型包括的对象仅可能为 True 或 False。
            python中，布尔值使用常量True 和 False来表示；注意大小写。bool是int的子类（继承int），help(bool)可见它的父类是int 
            故 True==1  False==0 是会返回Ture的，另外，由于bool是int，可进行数字计算。 
        浮点数：
            Python3的float表示是浮点数，即包含小数点的数都是浮点数，比如w=23.45。 
        复数：
            复数具有实部和虚部两个部分，都由 Python 中的 float 类型来表示。虚数是 -1的平方根的倍数，在 Python 中，
            复数的虚部被表示为 j：复数主要用于科学计算和物理，比如矢量，计算合力、太空、微电子领域等
        数据类型的判断：
            内置的type()函数可以用来查询变量所指的对象类型 
        del语句删除对象引用
            当给变量指定一个值时，Number 对象就会被创建，可以使用del语句删除一些对象引用。 
            语法：del var1[,var2[,var3[....,varN]]]] 
            通过使用del语句删除单个或多个对象
                del var
                del var_a,var_b
    字符串类型（String）
        定义：Python中的字符串用单引号(')或双引号(")括起来。 
        注意，Python没有单独的字符类型，一个字符就是长度为1的字符串。
    字符串操作
        连接（拼接）：用连接符号+来表示连接两个字符串。
        重复输出字符串：
            语法是 str*n        其中str是要重复的字符串，n表示重复的次数 
        截取字符串：
            从一个母字符串中截取一个或者多个子字符串：
            变量[头下标:尾下标] 
            索引值以 0 为开始值，如果尾下标是负数，表示从末尾的开始位置，比如-1 为倒数第1个字符结束。
    反斜杠的应用
        转义字符：Python 使用反斜杠(\)转义特殊字符，如果你不想让反斜杠发生转义，可以在字符串前面添加一个 r，表示原始字符串： 
        续行：反斜杠(\)可以作为续行符，表示下一行是上一行的延续。也可以使用 """...""" 或者 '''...''' 跨越多行。
    总结：
        1、反斜杠可以用来转义，使用r可以让反斜杠不发生转义。 
        2、字符串可以用+运算符连接在一起，用*运算符重复，用其他符号报错 
        3、Python中的字符串有两种索引方式，从左往右以0开始，从右往左以-1开始。 
        4、Python中的字符串中的某个字符不能改变。 